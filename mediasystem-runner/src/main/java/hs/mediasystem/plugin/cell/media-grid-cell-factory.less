@import "../../runner/properties.less";

.list-cell {
  -fx-padding: 4;

  .container {
    -fx-alignment: center;  // centers content in middle of cell

    &.horizontal {
      // Extra container so selection box exactly wraps content, not the entire cell
      -fx-layout: "[VBox!content]";

      .content {
        -fx-layout: "[VBox!image-box, name, detail]";
      }

      .image-box {
        -fx-layout: "[scaled-image-view, HBox!side-detail]";
      }

      .side-detail {
        -fx-layout: "[extra-horizontal-1: {hgrow: SOMETIMES}, extra-horizontal-2: {hgrow: ALWAYS}, indicator-pane]";

        -fx-background-color: linear-gradient(to bottom, -c-dark-glass, black);
        -fx-padding: -2 5 2 5;

        .extra-horizontal-1 {
          -fx-max-width: 10000;
        }
      }
    }

    &.vertical {
      // Extra container so selection box exactly wraps content, not the entire cell, for vertical also vgrow is set
      -fx-layout: "[VBox!content: {vgrow: ALWAYS}]";

      .content {
        -fx-layout: "[HBox!image-box: {vgrow: ALWAYS}, name, detail]";
      }

      .image-box {
        -fx-layout: "[scaled-image-view, VBox!side-detail]";
      }

      .side-detail {
        -fx-layout: "[extra-vertical-1: {vgrow: SOMETIMES}, extra-vertical-2: {vgrow: ALWAYS}, indicator-pane]";

        -fx-background-color: linear-gradient(to right, -c-dark-glass, black);
        -fx-padding: 5 0 5 0;

        // vertical labels are really panes, with a label inside it, which means some 
        // CSS properties are at different levels than a regular label.

        .extra-vertical-1 {
          -fx-max-height: Infinity;  // In case there is no other extra field, fill as much as possible
        }

        .extra-vertical-2 {
          -fx-max-height: Infinity;  // In case text is small, still fill as much as possible
        }

        .extra-vertical-2 .label {
          -fx-font-size: 11;
          -fx-wrap-text: true;
          -fx-alignment: center;
          -fx-text-alignment: center;
          .text-fill-accent-highlight;
        }
      }
    }

    .side-detail {
      -fx-spacing: 5;
      -fx-alignment: center;
    }

    .image-box {
      -fx-alignment: center;  // Aligns image + bar in the center of content box
    }

    .content {

      -fx-alignment: center;  // centers title/detail if only one line

      -fx-padding: 4 6 4 6;

      -fx-background-insets: 2;
      -fx-background-radius: 8;

      -fx-border-insets: 0, 1;
      -fx-border-radius: 9, 8;
      -fx-border-width: 1, 1.5;
      -fx-border-color: transparent, transparent;

      .image-view-effect {
        -fx-border-width: 2;
        -fx-border-color: -c-dark-glass;
      }

      .label.name,
      .label.detail
      {
        -fx-wrap-text: true;
        -fx-text-alignment: center;
        -fx-effect: dropshadow(three-pass-box, rgba(0, 0, 0, 0.8), 6, 0.3, 0, 0);
      }

      .label.name
      {
        .style-p2;
      }

      .label.detail
      {
        .style-p3;
        .text-fill-accent;
      }
    }
  }

  &:focused .container .content
  {
    -fx-background-color: linear-gradient(rgba(235, 235, 235, 0.4), rgba(235, 235, 235, 0.2) 25%, rgba(255, 255, 255, 0.3) 75%, rgba(235, 235, 235, 0.4));
    -fx-border-color:
       linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.9) 20%, rgba(0, 0, 0, 0.9) 70%, rgba(0, 0, 0, 0.6)),
       linear-gradient(rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.6) 10%, rgba(255, 255, 255, 0.6) 80%, rgba(255, 255, 255, 0.9));

    .label
    {
      .text-fill-highlight;
    }

    .label.detail
    {
      .text-fill-accent-highlight;
    }
  }

  .indicator,
  .indicator-background
  {
    -fx-min-width: 20;
    -fx-min-height: 20;
    -fx-translate-x: -2;  // because of scaling used
    -fx-translate-y: 0;
  }

  &.watched .indicator-background,
  &.unavailable .indicator-background
  {
    -fx-background-color: rgba(0, 0, 0, 0.6);
    -fx-scale-x: 1.1;
    -fx-scale-y: 1.1;
    -fx-shape: @shape-disc;
  }

  &.watched .indicator
  {
    -fx-background-color: rgba(125, 255, 125, 0.5);
    -fx-shape: @shape-checkmark;
  }

  &.unavailable .indicator
  {
    -fx-background-color: rgba(255, 0, 0, 0.5);
    -fx-shape: @shape-cross;
  }
}