<project
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
  xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <groupId>hs.mediasystem</groupId>
  <artifactId>mediasystem-parent</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <properties>
    <revision>2.0.0-SNAPSHOT</revision>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.jackson>2.14.0</version.jackson>
    <version.javafx>22.0.2</version.javafx>
    <version.dirk>1.0.0-beta1</version.dirk>
    <version.eventstream>0.3.0</version.eventstream>
    <version.junit5>5.10.2</version.junit5>
    <version.mockito>5.12.0</version.mockito>
    <version.templatedjdbc>0.1.1</version.templatedjdbc>
  </properties>

  <modules>
    <module>mediasystem-runner</module>
    <module>mediasystem-domain</module>
    <module>mediasystem-util</module>
    <module>mediasystem-db</module>
    <module>mediasystem-api-datasource</module>
    <module>mediasystem-api-discovery</module>
    <module>mediasystem-ui-api</module>
    <module>mediasystem-local-client</module>
    <module>mediasystem-jfx</module>

    <!-- build in order to run tests, not packaged though -->
    <module>mediasystem-ext-local</module>
    <module>mediasystem-ext-mpv</module>
    <module>mediasystem-ext-scanners</module>
    <module>mediasystem-ext-tmdb</module>
    <module>mediasystem-ext-vlc</module>

    <module>mediasystem-package</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>hs.mediasystem</groupId>
        <artifactId>mediasystem-jfx</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.dirk</groupId>
        <artifactId>dirk-jsr330</artifactId>
        <version>${version.dirk}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.dirk</groupId>
        <artifactId>dirk-core</artifactId>
        <version>${version.dirk}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.dirk</groupId>
        <artifactId>dirk-plugins</artifactId>
        <version>${version.dirk}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.dirk.extensions</groupId>
        <artifactId>extensions-assisted</artifactId>
        <version>${version.dirk}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.db</groupId>
        <artifactId>db-core</artifactId>
        <version>${version.templatedjdbc}</version>
      </dependency>
      <dependency>
        <groupId>org.int4.db</groupId>
        <artifactId>db-test</artifactId>
        <version>${version.templatedjdbc}</version>
      </dependency>
      <dependency>
        <groupId>com.github.hjohn.jfx.eventstream</groupId>
        <artifactId>eventstream-core</artifactId>
        <version>${version.eventstream}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-base</artifactId>
        <version>${version.javafx}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-controls</artifactId>
        <version>${version.javafx}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-swing</artifactId>
        <version>${version.javafx}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-graphics</artifactId>
        <version>${version.javafx}</version>
        <classifier>win</classifier>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-graphics</artifactId>
        <version>${version.javafx}</version>
        <classifier>linux</classifier>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-graphics</artifactId>
        <version>${version.javafx}</version>
        <classifier>mac</classifier>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-parameter-names</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jdk8</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${version.jackson}</version>
      </dependency>
      <dependency>
        <groupId>com.tngtech.archunit</groupId>
        <artifactId>archunit-junit5</artifactId>
        <version>1.2.1</version>
      </dependency>
      <dependency>
        <groupId>javax.inject</groupId>
        <artifactId>javax.inject</artifactId>
        <version>1</version>
      </dependency>
      <dependency> <!-- force a specific version of byte buddy that supports JDK 21 -->
        <groupId>net.bytebuddy</groupId>
        <artifactId>byte-buddy</artifactId>
        <version>1.14.15</version>
      </dependency>
      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>4.2.0</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${version.junit5}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${version.junit5}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${version.junit5}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${version.junit5}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${version.mockito}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${version.mockito}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <resources>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.properties</include>
          <include>**/*.jpg</include>
          <include>**/*.png</include>
          <include>**/*.css</include>
          <include>**/*.less</include>
          <include>**/*.json</include>
          <include>**/*.yaml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <!-- common plugins -->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.10.1</version>
        <configuration>
          <source>21</source>
          <target>21</target>
          <compilerArgument>-parameters</compilerArgument>
          <enablePreview>true</enablePreview>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <argLine>--enable-preview</argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <forkCount>0</forkCount> <!-- reflections otherwise doesn't work in combination with Java 11... -->
          <argLine>--enable-preview</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.1</version>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
